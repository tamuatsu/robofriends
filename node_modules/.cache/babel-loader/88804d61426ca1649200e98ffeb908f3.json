{"ast":null,"code":"var _jsxFileName = \"/Users/spirits/Documents/GitHub/robofriends/src/components/CounterButton.js\";\nimport React, { Component } from 'react';\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n\n    this.updateCount = () => {\n      this.setState(state => {\n        return {\n          count: this.state.count + 1\n        };\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(nextProps, nextState);\n    return true;\n  }\n\n  render() {\n    console.log('CounterButton');\n    return /*#__PURE__*/React.createElement(\"button\", {\n      color: this.props.color,\n      onClick: this.updateCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Count: \", this.state.count);\n  }\n\n}\n\nexport default CounterButton;","map":{"version":3,"sources":["/Users/spirits/Documents/GitHub/robofriends/src/components/CounterButton.js"],"names":["React","Component","CounterButton","constructor","updateCount","setState","state","count","shouldComponentUpdate","nextProps","nextState","console","log","render","props","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAG;AACV;;AADU,SAUdC,WAVc,GAUA,MAAM;AAChB,WAAKC,QAAL,CAAcC,KAAK,IAAI;AACnB,eAAO;AAACC,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,SAAP;AACH,OAFD;AAGH,KAda;;AAEV,SAAKD,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AACDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBC,SAAvB;AACA,WAAO,IAAP;AACH;;AAMDG,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,wBACI;AAAQ,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,KAA1B;AAAiC,MAAA,OAAO,EAAE,KAAKX,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,KAAKE,KAAL,CAAWC,KADvB,CADJ;AAKH;;AAvBiC;;AA0BtC,eAAeL,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CounterButton extends Component {\n    constructor() {\n        super();\n        this.state = {\n            count: 0\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log(nextProps, nextState)\n        return true\n    }\n    updateCount = () => {\n        this.setState(state => {\n            return {count: this.state.count + 1}\n        })\n    }\n    render() {\n        console.log('CounterButton');\n        return (\n            <button color={this.props.color} onClick={this.updateCount}>\n                Count: {this.state.count}\n            </button>\n        )\n    }\n}\n\nexport default CounterButton; "]},"metadata":{},"sourceType":"module"}